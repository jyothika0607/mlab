import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
%matplotlib inline
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score,confusion_matrix
from sklearn.feature_extraction.text import CountVectorizer
data=pd.read_csv('synthetic_text_data.csv')
x=data['text']
y=data['label']
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=42)
vectorizer=CountVectorizer()
x_train_vectorized=vectorizer.fit_transform(x_train)
x_test_vectorized=vectorizer.transform(x_test)
model=MultinomialNB()
model.fit(x_train_vectorized,y_train)

y_pred=model.predict(x_test_vectorized)
accuracy=accuracy_score(y_test,y_pred)
conf_matrix=confusion_matrix(y_test,y_pred)
print(f'Accuracy:{accuracy*100}%')
class_labels=np.unique(y_test)
plt.figure(figsize=(8,6))
sns.heatmap(conf_matrix,annot=True,fmt='d',cmap='Blues',xticklabels=class_labels,yticklabe
ls=class_labels)
plt.title('ConfusionMatrix Heatmap')
plt.xlabel('predicted label')
plt.ylabel('True label')
plt.show()

user_input=("Digital currencies and blockchain technology and revolutionizing finance.")
user_input_vectorized=vectorizer.transform([user_input])
predicted_label=model.predict(user_input_vectorized)
print(f"The input text belongs to the '{predicted_label[0]}'category")
